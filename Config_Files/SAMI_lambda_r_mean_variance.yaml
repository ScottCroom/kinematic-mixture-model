
data_filename : 'Data/jvds_stelkin_cat_v012_mge_seecorr_kh20_v190620_private.fits'

# Column Names
lambda_r_column_name : LAMBDAR_RE
mass_column_name : LMSTAR

# Make a mask which we'll apply to the data to get rid of some galaxies. It's pure python!
# Use data_df to refer to the dataframe itself
# Here we're getting rid of infiniet values of mass and lamda_r, selecting galaxies with mass > 9.5 and keeping things with a flag value of 0 or 4
mask : (np.isfinite(data_df.LAMBDAR_RE)) & (np.isfinite(data_df.LMSTAR)) & (data_df.LMSTAR > 9.5) & ((data_df.GAL_FLAG == 0) | (data_df.GAL_FLAG == 4))

## Output files
# In here will be folders called "Outputs" (for tables), "Plots" and "Chains"
results_folder : Results/SAMI_lambda_R_mean_variance
outfile_stem : SAMI_lambda_R_mean_variance

## Initial values for PyStan
# ToDo - add an easy way to randomise these

init_values : 

        lSR : 0.06
        phiSR : 7

        lFR : 0.55
        phiFR : 100

        c_SR : -2.75 #np.log(lSR) - np.log(1-lSR),# + np.random.randn(),
        c_FR : 0.2 #np.log(lFR) - np.log(1-lFR),# + np.random.randn(),

        d_SR : 0.0
        d_FR : 0.0

        e_SR : 0.0
        e_FR : 0.0

        mu : 0.0
        sigma : -1.2

## Stan options

stan_model_file : "StanModels/SAMI_data_MixtureModel_Mean_Variance_parameterisation.stan"

iterations : 1000
chains : 4
stan_options : 
  adapt_delta : 0.9


## Plotting options:
publication_style : True

## Don't make the lookup table for the mean/variance parameterisation
make_lookup_table : False